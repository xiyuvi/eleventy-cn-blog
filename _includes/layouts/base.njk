<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if you’d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{# {%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %} #}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		{#- <style>{% getBundle "css" %}</style> #}
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		<link rel="stylesheet" href="{% getBundleFileUrl "css" %}">
		{#- 视图转换 #}
		<meta name="view-transition" content="same-origin">
	</head>
	<body>
		<a href="#skip" class="visually-hidden">Skip to main content</a>

		<header>
			<a href="/" class="home-link">{{ metadata.title }}</a>

			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				<ul class="nav">
				{%- for entry in collections.all | eleventyNavigation %}
					<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
				{%- endfor %}
				</ul>
			</nav>
		</header>
		<main id="skip">
			{{ content | safe }}
		</main>

		<footer></footer>

		<!-- Current page: {{ page.url | htmlBaseUrl }} -->
		<!-- 预加载 -->
		{# <script src="https://cdnjs.cloudflare.com/ajax/libs/quicklink/2.3.0/quicklink.umd.js"></script> #}
		<script src="/js/quicklink.umd.js"></script>
        <script>
            window.addEventListener('load', () => {
                quicklink.listen();
                if (typeof navigator.onLine !== 'undefined' && !navigator.onLine) {
                    let dom = document.querySelector('.message-box p')
                    if (dom) {
                        dom.textContent = "当前处于离线状态。您仍然可以使用此网站，但内容可能不是最新的。";
                    }
                }
            });
            if ("serviceWorker" in navigator) {
                navigator
                    .serviceWorker
                    .register("/service-worker.js")
                    .then((registration) => {
                        registration.addEventListener("updatefound", () => {
                            const newWorker = registration.installing;
                            newWorker.addEventListener("statechange", () => {
                                if (newWorker.state === "installed") {
                                    if (navigator.serviceWorker.controller) { // New service worker installed and registered, we reload the page
                                        window.location.reload();
                                    }
                                }
                            });
                        });
                    })
                    .catch((error) => {
                        console.error("Service Worker registration failed:", error);
                    });
            }
        </script>
	</body>
</html>
